package concurrentmap

// Edit if desired. Code generated by "fzgen -chain -parallel .".

import (
	"testing"

	"github.com/thepudds/fzgen/fuzzer"
)

func Fuzz_New_Chain(f *testing.F) {
	f.Fuzz(func(t *testing.T, data []byte) {
		fz := fuzzer.NewFuzzer(data)

		target := New()

		steps := []fuzzer.Step{
			{
				Name: "Fuzz_Map_Get",
				Func: func(key string) (string, bool) {
					return target.Get(key)
				},
			},
			{
				Name: "Fuzz_Map_Set",
				Func: func(key string, value string) {
					target.Set(key, value)
				},
			},
		}

		// Execute a specific chain of steps, with the count, sequence and arguments controlled by fz.Chain
		fz.Chain(steps, fuzzer.ChainParallel)
	})
}
